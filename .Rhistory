length(unique(All_possible_names$FullNames))
All_possible_names %>% group_by(FullNames) %>% count(sort = TRUE) %>% filter(n>1)
set.seed(1111)
Cust_FullName <- All_possible_names[sample(nrow(All_possible_names), 200), ]
length(unique(Cust_FullName$FullNames))
Cust_FullName %>% group_by(Genders) %>% count()
Age_Demographics <- data.frame(Age_range = c("15-19","20-39","40-69","70+"),
prevalence = c(0.13,0.45,0.25,0.17))
set.seed(1111)
Cust_Age <- data.frame(Cust_num = 1:200,
AgeRange = sample(Age_Demographics$Age_range,
size = 200,
replace = TRUE,
prob = Age_Demographics$prevalence))
Cust_Age %>% count(AgeRange)
set.seed(1111)
Cust_Age$Age <- case_when(Cust_Age$AgeRange == "15-19" ~ round(runif(nrow(Cust_Age), min = 15, max = 19)),
Cust_Age$AgeRange == "20-39" ~ round(runif(nrow(Cust_Age), min = 20, max = 39)),
Cust_Age$AgeRange == "40-69" ~ round(runif(nrow(Cust_Age), min = 40, max = 69)),
Cust_Age$AgeRange == "70+" ~ round(runif(nrow(Cust_Age), min = 70, max = 90)))
hist(Cust_Age$Age, breaks = 50)
TypeofEdu <- c("SS","VE","HE")
Edu_demographic <- data.frame(Edu_Type = c("SS","VE","HE"),
prevalence = c(0.47,0.18,0.35))
set.seed(1111)
Cust_Highest_Edu <- data.frame(Cust_num = 1:200,
High_Edu = sample(Edu_demographic$Edu_Type,
size = 200,
replace = TRUE,
prob = Edu_demographic$prevalence))
Cust_Highest_Edu %>% count(High_Edu)
Avg_Sal_by_Professions <- read.xlsx("ref/Avg_weekly_salary_by_professions.xlsx")
head(Avg_Sal_by_Professions,5)
SS_educations <- c("No tertiary qualification")
VE_educations <- c("Certificate I-II","Certificate III-IV","Diploma")
HE_educations <- c("Bachelor degree","Graduate diploma", "Postgraduate degree")
Avg_Sal_by_Professions$High_Edu <- case_when(Avg_Sal_by_Professions$Qualification %in% SS_educations ~ "SS",
Avg_Sal_by_Professions$Qualification %in% VE_educations ~ "VE",
Avg_Sal_by_Professions$Qualification %in% HE_educations ~ "HE")
SS_Prof <- Avg_Sal_by_Professions %>% filter(Qualification %in% SS_educations) %>% pull(Professions)
VE_Prof <- Avg_Sal_by_Professions %>% filter(Qualification %in% VE_educations) %>% pull(Professions)
HE_Prof <- Avg_Sal_by_Professions %>% filter(Qualification %in% HE_educations) %>% pull(Professions)
set.seed(1111)
Cust_Prof_Salary <- data.frame(Professions = sample(SS_Prof,size = 93,replace = TRUE))
Cust_Prof_Salary <- rbind(Cust_Prof_Salary, data.frame(Professions = sample(VE_Prof,size = 39,replace = TRUE)))
Cust_Prof_Salary <- rbind(Cust_Prof_Salary, data.frame(Professions = sample(HE_Prof,size = 68,replace = TRUE)))
Cust_Prof_Salary$Num <- c(1:200)
## Getting other information of these professions such as highest educational levels and average weekly salary
Cust_Prof_Salary <- Cust_Prof_Salary %>% left_join(.,Avg_Sal_by_Professions) %>% select(Num,Professions,Avg_Weekly_Salary,High_Edu)
head(Cust_Prof_Salary,5)
Cust_Prof_Salary %>% group_by(Professions) %>% summarise(count=n(),percent = count / nrow(.) * 100) %>% arrange(desc(count)) %>% head(n=10)
Cust_Prof_Salary$Avg_Monthly_Salary <- Cust_Prof_Salary$Avg_Weekly_Salary*4
set.seed(1111)
Cust_Prof_Salary$Difference <- rnorm(n=200,mean = 0,sd=2)*100
Cust_Prof_Salary$Monthly_Salary <- round(Cust_Prof_Salary$Avg_Monthly_Salary+ Cust_Prof_Salary$Difference,digits = -2)
Street_names_Melb <- read_csv("https://data.melbourne.vic.gov.au/api/explore/v2.1/catalog/datasets/street-names/exports/csv?lang=en&timezone=Australia%2FSydney&use_labels=true&delimiter=%2C", col_select = c("mccid_gis", "name"))
dim(Street_names_Melb)
head(Street_names_Melb,n=5)
Street_names_Melb$Address <- paste(Street_names_Melb$mccid_gis," ",Street_names_Melb$name," ", "Melbourne, Australia")
set.seed(1111)
Cust_Address <- data.frame(Num = c(1:200),
Address = sample(Street_names_Melb$Address,size = 200,replace=FALSE))
set.seed(1111)
Cust_Address$rand <- runif(200,min = 0, max = 1)
Cust_Address$Address <- case_when(Cust_Address$rand >= 0.05 ~ Cust_Address$Address)
Customer_Dataset <- data.frame(Cust_ID = Cust_ID,
Firstname = Cust_FullName$FirstNames,
Lastname = Cust_FullName$Surname,
Gender = case_when(Cust_FullName$Genders == "Girls" ~ "Female",
Cust_FullName$Genders == "Boys" ~ "Male"),
Age = Cust_Age$Age,
Highest_Education = Cust_Prof_Salary$High_Edu,
Profession = Cust_Prof_Salary$Professions,
Monthly_Salary = Cust_Prof_Salary$Monthly_Salary,
Address = Cust_Address$Address)
set.seed(2222)
Acc_Num <- round(runif(200,min = 0.1)*10^8,digits = 0)
year <- c(2000:2023)
month <- c(1:12)
day <- c(1:30)
#Sample the Acc_open_date
set.seed(2222)
Acc_open_date <- data.frame(Date = paste(sample(day, size = 200,replace = TRUE),sample(month,size = 200,replace = TRUE),sample(year,size = 200,replace = TRUE)))
#Convert the format
Acc_open_date$Open_date <- lubridate::dmy(Acc_open_date$Date)
#Calculate the Month_diff
end_date <- lubridate::dmy("01/04/2024")
Acc_open_date$Month_diff <- lubridate::interval(Acc_open_date$Open_date, end_date) %/% months(1)
Street_names_Melb$Address <- paste(Street_names_Melb$mccid_gis," ",Street_names_Melb$name," ", "Melbourne, Australia")
set.seed(1111)
Cust_Address <- data.frame(Num = c(1:200),
Address = sample(Street_names_Melb$Address,size = 200,replace=FALSE))
set.seed(1111)
Cust_Address$rand <- runif(200,min = 0, max = 1)
Cust_Address$Address <- case_when(Cust_Address$rand >= 0.05 ~ Cust_Address$Address)
set.seed(1111)
Cust_Address$rand <- runif(200,min = 0, max = 1)
Cust_Address$Address <- case_when(Cust_Address$rand >= 0.05 ~ Cust_Address$Address)
Customer_Dataset <- data.frame(Cust_ID = Cust_ID,
Firstname = Cust_FullName$FirstNames,
Lastname = Cust_FullName$Surname,
Gender = case_when(Cust_FullName$Genders == "Girls" ~ "Female",
Cust_FullName$Genders == "Boys" ~ "Male"),
Age = Cust_Age$Age,
Highest_Education = Cust_Prof_Salary$High_Edu,
Profession = Cust_Prof_Salary$Professions,
Monthly_Salary = Cust_Prof_Salary$Monthly_Salary,
Address = Cust_Address$Address)
set.seed(2222)
Acc_Num <- round(runif(200,min = 0.1)*10^8,digits = 0)
set.seed(2222)
Acc_Num <- round(runif(200,min = 0.1)*10^8,digits = 0)
year <- c(2000:2023)
month <- c(1:12)
day <- c(1:30)
#Sample the Acc_open_date
set.seed(2222)
Acc_open_date <- data.frame(Date = paste(sample(day, size = 200,replace = TRUE),sample(month,size = 200,replace = TRUE),sample(year,size = 200,replace = TRUE)))
#Convert the format
Acc_open_date$Open_date <- lubridate::dmy(Acc_open_date$Date)
#Calculate the Month_diff
end_date <- lubridate::dmy("01/04/2024")
Acc_open_date$Month_diff <- lubridate::interval(Acc_open_date$Open_date, end_date) %/% months(1)
year <- c(2000:2023)
month <- c(1:12)
day <- c(1:30)
#Sample the Acc_open_date
set.seed(2222)
Acc_open_date <- data.frame(Date = paste(sample(day, size = 200,replace = TRUE),sample(month,size = 200,replace = TRUE),sample(year,size = 200,replace = TRUE)))
#Convert the format
Acc_open_date$Open_date <- lubridate::dmy(Acc_open_date$Date)
#Calculate the Month_diff
end_date <- lubridate::dmy("01/04/2024")
Acc_open_date$Month_diff <- lubridate::interval(Acc_open_date$Open_date, end_date) %/% months(1)
Acc_Current_Balance <- data.frame(Current_Bal = 0.2*Acc_open_date$Month_diff*Customer_Dataset$Monthly_Salary)
set.seed(2222)
Acc_Current_Balance$rand <- runif(200, min = 0, max = 1)
Acc_Current_Balance$Current_Balance <- case_when(Acc_Current_Balance$rand >= 0.05 ~ Acc_Current_Balance$Current_Bal)
library(readr)
library(dplyr)
library(openxlsx)
library(tidyr)
library(rvest)
library(tidyverse)
library(ggplot2)
library(here)
set.seed(1111)
Cust_ID <- round(runif(200,min = 0.1)*10^8,digits = 0)
setwd(here())
baby_names <- read.xlsx("ref/Top_baby_names_of_2024.xlsx")
head(baby_names,n=5)
baby_names_long <- baby_names %>% pivot_longer(.,c("Girls","Boys"),names_to = "Genders", values_to = "FirstNames") %>% select(Genders, FirstNames)
head(baby_names_long,n=5)
#Getting Surnames
top_surnames_url <- "https://www.thoughtco.com/most-common-us-surnames-1422656"
html_code <- read_html(top_surnames_url)
table_html <- html_code %>% html_nodes("table") %>% .[[1]]
top_100_surnames <- table_html %>% html_table()
#Checking top five rows of the table
head(top_100_surnames, n=5)
All_possible_names <- select(cross_join(baby_names_long,top_100_surnames),c(Genders, FirstNames, Surname))
All_possible_names[,"FullNames"] <- paste(All_possible_names$FirstNames," ",All_possible_names$Surname)
length(All_possible_names$FullNames)
length(unique(All_possible_names$FullNames))
All_possible_names %>% group_by(FullNames) %>% count(sort = TRUE) %>% filter(n>1)
set.seed(1111)
Cust_FullName <- All_possible_names[sample(nrow(All_possible_names), 200), ]
length(unique(Cust_FullName$FullNames))
Cust_FullName %>% group_by(Genders) %>% count()
Age_Demographics <- data.frame(Age_range = c("15-19","20-39","40-69","70+"),
prevalence = c(0.13,0.45,0.25,0.17))
set.seed(1111)
Cust_Age <- data.frame(Cust_num = 1:200,
AgeRange = sample(Age_Demographics$Age_range,
size = 200,
replace = TRUE,
prob = Age_Demographics$prevalence))
Cust_Age %>% count(AgeRange)
set.seed(1111)
Cust_Age$Age <- case_when(Cust_Age$AgeRange == "15-19" ~ round(runif(nrow(Cust_Age), min = 15, max = 19)),
Cust_Age$AgeRange == "20-39" ~ round(runif(nrow(Cust_Age), min = 20, max = 39)),
Cust_Age$AgeRange == "40-69" ~ round(runif(nrow(Cust_Age), min = 40, max = 69)),
Cust_Age$AgeRange == "70+" ~ round(runif(nrow(Cust_Age), min = 70, max = 90)))
hist(Cust_Age$Age, breaks = 50)
TypeofEdu <- c("SS","VE","HE")
Edu_demographic <- data.frame(Edu_Type = c("SS","VE","HE"),
prevalence = c(0.47,0.18,0.35))
set.seed(1111)
Cust_Highest_Edu <- data.frame(Cust_num = 1:200,
High_Edu = sample(Edu_demographic$Edu_Type,
size = 200,
replace = TRUE,
prob = Edu_demographic$prevalence))
Cust_Highest_Edu %>% count(High_Edu)
Avg_Sal_by_Professions <- read.xlsx("ref/Avg_weekly_salary_by_professions.xlsx")
head(Avg_Sal_by_Professions,5)
SS_educations <- c("No tertiary qualification")
VE_educations <- c("Certificate I-II","Certificate III-IV","Diploma")
HE_educations <- c("Bachelor degree","Graduate diploma", "Postgraduate degree")
Avg_Sal_by_Professions$High_Edu <- case_when(Avg_Sal_by_Professions$Qualification %in% SS_educations ~ "SS",
Avg_Sal_by_Professions$Qualification %in% VE_educations ~ "VE",
Avg_Sal_by_Professions$Qualification %in% HE_educations ~ "HE")
SS_Prof <- Avg_Sal_by_Professions %>% filter(Qualification %in% SS_educations) %>% pull(Professions)
VE_Prof <- Avg_Sal_by_Professions %>% filter(Qualification %in% VE_educations) %>% pull(Professions)
HE_Prof <- Avg_Sal_by_Professions %>% filter(Qualification %in% HE_educations) %>% pull(Professions)
set.seed(1111)
Cust_Prof_Salary <- data.frame(Professions = sample(SS_Prof,size = 93,replace = TRUE))
Cust_Prof_Salary <- rbind(Cust_Prof_Salary, data.frame(Professions = sample(VE_Prof,size = 39,replace = TRUE)))
Cust_Prof_Salary <- rbind(Cust_Prof_Salary, data.frame(Professions = sample(HE_Prof,size = 68,replace = TRUE)))
Cust_Prof_Salary$Num <- c(1:200)
## Getting other information of these professions such as highest educational levels and average weekly salary
Cust_Prof_Salary <- Cust_Prof_Salary %>% left_join(.,Avg_Sal_by_Professions) %>% select(Num,Professions,Avg_Weekly_Salary,High_Edu)
head(Cust_Prof_Salary,5)
Cust_Prof_Salary %>% group_by(Professions) %>% summarise(count=n(),percent = count / nrow(.) * 100) %>% arrange(desc(count)) %>% head(n=10)
Cust_Prof_Salary$Avg_Monthly_Salary <- Cust_Prof_Salary$Avg_Weekly_Salary*4
set.seed(1111)
Cust_Prof_Salary$Difference <- rnorm(n=200,mean = 0,sd=2)*100
Cust_Prof_Salary$Monthly_Salary <- round(Cust_Prof_Salary$Avg_Monthly_Salary+ Cust_Prof_Salary$Difference,digits = -2)
Street_names_Melb <- read_csv("https://data.melbourne.vic.gov.au/api/explore/v2.1/catalog/datasets/street-names/exports/csv?lang=en&timezone=Australia%2FSydney&use_labels=true&delimiter=%2C", col_select = c("mccid_gis", "name"))
dim(Street_names_Melb)
head(Street_names_Melb,n=5)
Street_names_Melb$Address <- paste(Street_names_Melb$mccid_gis," ",Street_names_Melb$name," ", "Melbourne, Australia")
set.seed(1111)
Cust_Address <- data.frame(Num = c(1:200),
Address = sample(Street_names_Melb$Address,size = 200,replace=FALSE))
set.seed(1111)
Cust_Address$rand <- runif(200,min = 0, max = 1)
Cust_Address$Address <- case_when(Cust_Address$rand >= 0.05 ~ Cust_Address$Address)
Customer_Dataset <- data.frame(Cust_ID = Cust_ID,
Firstname = Cust_FullName$FirstNames,
Lastname = Cust_FullName$Surname,
Gender = case_when(Cust_FullName$Genders == "Girls" ~ "Female",
Cust_FullName$Genders == "Boys" ~ "Male"),
Age = Cust_Age$Age,
Highest_Education = Cust_Prof_Salary$High_Edu,
Profession = Cust_Prof_Salary$Professions,
Monthly_Salary = Cust_Prof_Salary$Monthly_Salary,
Address = Cust_Address$Address)
set.seed(2222)
Acc_Num <- round(runif(200,min = 0.1)*10^8,digits = 0)
year <- c(2000:2023)
month <- c(1:12)
day <- c(1:30)
#Sample the Acc_open_date
set.seed(2222)
Acc_open_date <- data.frame(Date = paste(sample(day, size = 200,replace = TRUE),sample(month,size = 200,replace = TRUE),sample(year,size = 200,replace = TRUE)))
#Convert the format
Acc_open_date$Open_date <- lubridate::dmy(Acc_open_date$Date)
#Calculate the Month_diff
end_date <- lubridate::dmy("01/04/2024")
Acc_open_date$Month_diff <- lubridate::interval(Acc_open_date$Open_date, end_date) %/% months(1)
Acc_Current_Balance <- data.frame(Current_Bal = 0.2*Acc_open_date$Month_diff*Customer_Dataset$Monthly_Salary)
set.seed(2222)
Acc_Current_Balance$rand <- runif(200, min = 0, max = 1)
Acc_Current_Balance$Current_Balance <- case_when(Acc_Current_Balance$rand >= 0.05 ~ Acc_Current_Balance$Current_Bal)
Acc_Current_Balance$Interest <- Acc_Current_Balance$Current_Balance*(Acc_open_date$Month_diff/12)*0.03
Saving_Acc_Dataset <- data.frame(Acc_Num = Acc_Num,
Cust_ID = Cust_ID,
Acc_open_date = Acc_open_date$Open_date,
Average_Current_Balance = Acc_Current_Balance$Current_Balance,
Interest = Acc_Current_Balance$Interest)
Banking_Cust_Acc <- merge(Customer_Dataset,Saving_Acc_Dataset, by = "Cust_ID")
str(Banking_Cust_Acc)
Banking_Cust_Acc$Cust_ID <- as.integer(Banking_Cust_Acc$Cust_ID)
Banking_Cust_Acc$Gender <- as.factor(Banking_Cust_Acc$Gender)
Banking_Cust_Acc$Highest_Education <- Banking_Cust_Acc$Highest_Education %>% factor(.,
levels = c("SS","VE","HE"), labels = c("Secondary School or lower", "Vocational Educations","University or Higher educations"), ordered = TRUE)
Banking_Cust_Acc$Profession <- as.factor(Banking_Cust_Acc$Profession)
Banking_Cust_Acc$Acc_Num <- as.integer(Banking_Cust_Acc$Acc_Num)
Banking_Cust_Acc$Profession %>% levels()
class(Banking_Cust_Acc$Highest_Education)
str(Banking_Cust_Acc)
Banking_Cust_Acc %>% group_by(Highest_Education) %>% summarise(Min = min(Monthly_Salary, na.rm = TRUE),
Q1 = quantile(Monthly_Salary, probs = .25, na.rm = TRUE),
Median = median(Monthly_Salary, na.rm = TRUE),
Q3 = quantile(Monthly_Salary, probs = .75, na.rm = TRUE),
Max = max(Monthly_Salary, na.rm = TRUE),
Mean = mean(Monthly_Salary, na.rm = TRUE),
SD = sd(Monthly_Salary, na.rm = TRUE),
n = n(),
Missing = sum(is.na(Monthly_Salary)))
ggplot(Banking_Cust_Acc, aes(x = Highest_Education, y = Monthly_Salary)) +
geom_boxplot(fill = "purple", color = "black") +
xlab("Highes Educational Level") +
ylab("Salary (AUD)") +
theme_classic() +
labs(title = "Monthly Salary by Highest Educations")
Banking_Cust_Acc %>% group_by(Profession) %>% summarise(Min = min(Age, na.rm = TRUE),
Q1 = quantile(Age, probs = .25, na.rm = TRUE),
Median = median(Age, na.rm = TRUE),
Q3 = quantile(Age, probs = .75, na.rm = TRUE),
Max = max(Age, na.rm = TRUE),
Mean = mean(Age, na.rm = TRUE),
SD = sd(Age, na.rm = TRUE),
n = n(),
Missing = sum(is.na(Age))) %>% arrange(desc(n)) %>% head(10)
Banking_Cust_Acc %>% group_by(Profession) %>% summarise(Min = min(Monthly_Salary, na.rm = TRUE),
Q1 = quantile(Monthly_Salary, probs = .25, na.rm = TRUE),
Median = median(Monthly_Salary, na.rm = TRUE),
Q3 = quantile(Monthly_Salary, probs = .75, na.rm = TRUE),
Max = max(Monthly_Salary, na.rm = TRUE),
Mean = mean(Monthly_Salary, na.rm = TRUE),
SD = sd(Monthly_Salary, na.rm = TRUE),
n = n(),
Missing = sum(is.na(Monthly_Salary))) %>% arrange(desc(Mean)) %>% head(10)
sapply(Banking_Cust_Acc, anyNA)
which(is.na(Banking_Cust_Acc$Address))
which(is.na(Banking_Cust_Acc$Average_Current_Balance))
which(is.na(Banking_Cust_Acc$Interest))
library(Hmisc)
Banking_Cust_Acc$Cleaned_Current_Balance <- impute(Banking_Cust_Acc$Average_Current_Balance, fun = median)
Banking_Cust_Acc$Cleaned_Interest <- impute(Banking_Cust_Acc$Interest, fun = median)
#Use sum() with Average_Current_Balance and Interest
sum(Banking_Cust_Acc$Average_Current_Balance)
sum(Banking_Cust_Acc$Intereset)
#Use sum() with Cleaned_Current_Balance and Cleaned_Interest
sum(Banking_Cust_Acc$Cleaned_Current_Balance)
sum(Banking_Cust_Acc$Cleaned_Interest)
which(is.na(Banking_Cust_Acc$Cleaned_Current_Balance))
which(is.na(Banking_Cust_Acc$Cleaned_Interest))
end_date <- lubridate::dmy("01/04/2024")
Banking_Cust_Acc$Deposit_Month_Length <- lubridate::interval(Banking_Cust_Acc$Acc_open_date, end_date) %/% months(1)
Cor_Data <- Banking_Cust_Acc %>% select(Age, Monthly_Salary, Cleaned_Current_Balance, Cleaned_Interest, Deposit_Month_Length) %>% cor() %>% round(3)
Cor_Data
corrplot::corrplot(Cor_Data, method = 'circle', addCoef.col = 'purple')
library(readr)
library(dplyr)
library(openxlsx)
library(tidyr)
library(rvest)
library(tidyverse)
library(ggplot2)
library(here)
set.seed(1111)
Cust_ID <- round(runif(200,min = 0.1)*10^8,digits = 0)
setwd(here())
baby_names <- read.xlsx("ref/Top_baby_names_of_2024.xlsx")
head(baby_names,n=5)
baby_names_long <- baby_names %>% pivot_longer(.,c("Girls","Boys"),names_to = "Genders", values_to = "FirstNames") %>% select(Genders, FirstNames)
head(baby_names_long,n=5)
#Getting Surnames
top_surnames_url <- "https://www.thoughtco.com/most-common-us-surnames-1422656"
html_code <- read_html(top_surnames_url)
table_html <- html_code %>% html_nodes("table") %>% .[[1]]
top_100_surnames <- table_html %>% html_table()
#Checking top five rows of the table
head(top_100_surnames, n=5)
All_possible_names <- select(cross_join(baby_names_long,top_100_surnames),c(Genders, FirstNames, Surname))
All_possible_names[,"FullNames"] <- paste(All_possible_names$FirstNames," ",All_possible_names$Surname)
length(All_possible_names$FullNames)
length(unique(All_possible_names$FullNames))
All_possible_names %>% group_by(FullNames) %>% count(sort = TRUE) %>% filter(n>1)
set.seed(1111)
Cust_FullName <- All_possible_names[sample(nrow(All_possible_names), 200), ]
length(unique(Cust_FullName$FullNames))
Cust_FullName %>% group_by(Genders) %>% count()
Age_Demographics <- data.frame(Age_range = c("15-19","20-39","40-69","70+"),
prevalence = c(0.13,0.45,0.25,0.17))
set.seed(1111)
Cust_Age <- data.frame(Cust_num = 1:200,
AgeRange = sample(Age_Demographics$Age_range,
size = 200,
replace = TRUE,
prob = Age_Demographics$prevalence))
Cust_Age %>% count(AgeRange)
set.seed(1111)
Cust_Age$Age <- case_when(Cust_Age$AgeRange == "15-19" ~ round(runif(nrow(Cust_Age), min = 15, max = 19)),
Cust_Age$AgeRange == "20-39" ~ round(runif(nrow(Cust_Age), min = 20, max = 39)),
Cust_Age$AgeRange == "40-69" ~ round(runif(nrow(Cust_Age), min = 40, max = 69)),
Cust_Age$AgeRange == "70+" ~ round(runif(nrow(Cust_Age), min = 70, max = 90)))
hist(Cust_Age$Age, breaks = 50)
TypeofEdu <- c("SS","VE","HE")
Edu_demographic <- data.frame(Edu_Type = c("SS","VE","HE"),
prevalence = c(0.47,0.18,0.35))
set.seed(1111)
Cust_Highest_Edu <- data.frame(Cust_num = 1:200,
High_Edu = sample(Edu_demographic$Edu_Type,
size = 200,
replace = TRUE,
prob = Edu_demographic$prevalence))
Cust_Highest_Edu %>% count(High_Edu)
Avg_Sal_by_Professions <- read.xlsx("ref/Avg_weekly_salary_by_professions.xlsx")
head(Avg_Sal_by_Professions,5)
SS_educations <- c("No tertiary qualification")
VE_educations <- c("Certificate I-II","Certificate III-IV","Diploma")
HE_educations <- c("Bachelor degree","Graduate diploma", "Postgraduate degree")
Avg_Sal_by_Professions$High_Edu <- case_when(Avg_Sal_by_Professions$Qualification %in% SS_educations ~ "SS",
Avg_Sal_by_Professions$Qualification %in% VE_educations ~ "VE",
Avg_Sal_by_Professions$Qualification %in% HE_educations ~ "HE")
SS_Prof <- Avg_Sal_by_Professions %>% filter(Qualification %in% SS_educations) %>% pull(Professions)
VE_Prof <- Avg_Sal_by_Professions %>% filter(Qualification %in% VE_educations) %>% pull(Professions)
HE_Prof <- Avg_Sal_by_Professions %>% filter(Qualification %in% HE_educations) %>% pull(Professions)
set.seed(1111)
Cust_Prof_Salary <- data.frame(Professions = sample(SS_Prof,size = 93,replace = TRUE))
Cust_Prof_Salary <- rbind(Cust_Prof_Salary, data.frame(Professions = sample(VE_Prof,size = 39,replace = TRUE)))
Cust_Prof_Salary <- rbind(Cust_Prof_Salary, data.frame(Professions = sample(HE_Prof,size = 68,replace = TRUE)))
Cust_Prof_Salary$Num <- c(1:200)
## Getting other information of these professions such as highest educational levels and average weekly salary
Cust_Prof_Salary <- Cust_Prof_Salary %>% left_join(.,Avg_Sal_by_Professions) %>% select(Num,Professions,Avg_Weekly_Salary,High_Edu)
head(Cust_Prof_Salary,5)
Cust_Prof_Salary %>% group_by(Professions) %>% summarise(count=n(),percent = count / nrow(.) * 100) %>% arrange(desc(count)) %>% head(n=10)
Cust_Prof_Salary$Avg_Monthly_Salary <- Cust_Prof_Salary$Avg_Weekly_Salary*4
set.seed(1111)
Cust_Prof_Salary$Difference <- rnorm(n=200,mean = 0,sd=2)*100
Cust_Prof_Salary$Monthly_Salary <- round(Cust_Prof_Salary$Avg_Monthly_Salary+ Cust_Prof_Salary$Difference,digits = -2)
Street_names_Melb <- read_csv("https://data.melbourne.vic.gov.au/api/explore/v2.1/catalog/datasets/street-names/exports/csv?lang=en&timezone=Australia%2FSydney&use_labels=true&delimiter=%2C", col_select = c("mccid_gis", "name"))
dim(Street_names_Melb)
head(Street_names_Melb,n=5)
Street_names_Melb$Address <- paste(Street_names_Melb$mccid_gis," ",Street_names_Melb$name," ", "Melbourne, Australia")
set.seed(1111)
Cust_Address <- data.frame(Num = c(1:200),
Address = sample(Street_names_Melb$Address,size = 200,replace=FALSE))
set.seed(1111)
Cust_Address$rand <- runif(200,min = 0, max = 1)
Cust_Address$Address <- case_when(Cust_Address$rand >= 0.05 ~ Cust_Address$Address)
Customer_Dataset <- data.frame(Cust_ID = Cust_ID,
Firstname = Cust_FullName$FirstNames,
Lastname = Cust_FullName$Surname,
Gender = case_when(Cust_FullName$Genders == "Girls" ~ "Female",
Cust_FullName$Genders == "Boys" ~ "Male"),
Age = Cust_Age$Age,
Highest_Education = Cust_Prof_Salary$High_Edu,
Profession = Cust_Prof_Salary$Professions,
Monthly_Salary = Cust_Prof_Salary$Monthly_Salary,
Address = Cust_Address$Address)
set.seed(2222)
Acc_Num <- round(runif(200,min = 0.1)*10^8,digits = 0)
year <- c(2000:2023)
month <- c(1:12)
day <- c(1:30)
#Sample the Acc_open_date
set.seed(2222)
Acc_open_date <- data.frame(Date = paste(sample(day, size = 200,replace = TRUE),sample(month,size = 200,replace = TRUE),sample(year,size = 200,replace = TRUE)))
#Convert the format
Acc_open_date$Open_date <- lubridate::dmy(Acc_open_date$Date)
#Calculate the Month_diff
end_date <- lubridate::dmy("01/04/2024")
Acc_open_date$Month_diff <- lubridate::interval(Acc_open_date$Open_date, end_date) %/% months(1)
Acc_Current_Balance <- data.frame(Current_Bal = 0.2*Acc_open_date$Month_diff*Customer_Dataset$Monthly_Salary)
set.seed(2222)
Acc_Current_Balance$rand <- runif(200, min = 0, max = 1)
Acc_Current_Balance$Current_Balance <- case_when(Acc_Current_Balance$rand >= 0.05 ~ Acc_Current_Balance$Current_Bal)
Acc_Current_Balance$Interest <- Acc_Current_Balance$Current_Balance*(Acc_open_date$Month_diff/12)*0.03
Saving_Acc_Dataset <- data.frame(Acc_Num = Acc_Num,
Cust_ID = Cust_ID,
Acc_open_date = Acc_open_date$Open_date,
Average_Current_Balance = Acc_Current_Balance$Current_Balance,
Interest = Acc_Current_Balance$Interest)
Banking_Cust_Acc <- merge(Customer_Dataset,Saving_Acc_Dataset, by = "Cust_ID")
str(Banking_Cust_Acc)
Banking_Cust_Acc$Cust_ID <- as.integer(Banking_Cust_Acc$Cust_ID)
Banking_Cust_Acc$Gender <- as.factor(Banking_Cust_Acc$Gender)
Banking_Cust_Acc$Highest_Education <- Banking_Cust_Acc$Highest_Education %>% factor(.,
levels = c("SS","VE","HE"), labels = c("Secondary School or lower", "Vocational Educations","University or Higher educations"), ordered = TRUE)
Banking_Cust_Acc$Profession <- as.factor(Banking_Cust_Acc$Profession)
Banking_Cust_Acc$Acc_Num <- as.integer(Banking_Cust_Acc$Acc_Num)
Banking_Cust_Acc$Profession %>% levels()
class(Banking_Cust_Acc$Highest_Education)
str(Banking_Cust_Acc)
Banking_Cust_Acc %>% group_by(Highest_Education) %>% summarise(Min = min(Monthly_Salary, na.rm = TRUE),
Q1 = quantile(Monthly_Salary, probs = .25, na.rm = TRUE),
Median = median(Monthly_Salary, na.rm = TRUE),
Q3 = quantile(Monthly_Salary, probs = .75, na.rm = TRUE),
Max = max(Monthly_Salary, na.rm = TRUE),
Mean = mean(Monthly_Salary, na.rm = TRUE),
SD = sd(Monthly_Salary, na.rm = TRUE),
n = n(),
Missing = sum(is.na(Monthly_Salary)))
ggplot(Banking_Cust_Acc, aes(x = Highest_Education, y = Monthly_Salary)) +
geom_boxplot(fill = "purple", color = "black") +
xlab("Highes Educational Level") +
ylab("Salary (AUD)") +
theme_classic() +
labs(title = "Monthly Salary by Highest Educations")
Banking_Cust_Acc %>% group_by(Profession) %>% summarise(Min = min(Age, na.rm = TRUE),
Q1 = quantile(Age, probs = .25, na.rm = TRUE),
Median = median(Age, na.rm = TRUE),
Q3 = quantile(Age, probs = .75, na.rm = TRUE),
Max = max(Age, na.rm = TRUE),
Mean = mean(Age, na.rm = TRUE),
SD = sd(Age, na.rm = TRUE),
n = n(),
Missing = sum(is.na(Age))) %>% arrange(desc(n)) %>% head(10)
Banking_Cust_Acc %>% group_by(Profession) %>% summarise(Min = min(Monthly_Salary, na.rm = TRUE),
Q1 = quantile(Monthly_Salary, probs = .25, na.rm = TRUE),
Median = median(Monthly_Salary, na.rm = TRUE),
Q3 = quantile(Monthly_Salary, probs = .75, na.rm = TRUE),
Max = max(Monthly_Salary, na.rm = TRUE),
Mean = mean(Monthly_Salary, na.rm = TRUE),
SD = sd(Monthly_Salary, na.rm = TRUE),
n = n(),
Missing = sum(is.na(Monthly_Salary))) %>% arrange(desc(Mean)) %>% head(10)
sapply(Banking_Cust_Acc, anyNA)
which(is.na(Banking_Cust_Acc$Address))
which(is.na(Banking_Cust_Acc$Average_Current_Balance))
which(is.na(Banking_Cust_Acc$Interest))
library(Hmisc)
Banking_Cust_Acc$Cleaned_Current_Balance <- impute(Banking_Cust_Acc$Average_Current_Balance, fun = median)
Banking_Cust_Acc$Cleaned_Interest <- impute(Banking_Cust_Acc$Interest, fun = median)
#Use sum() with Average_Current_Balance and Interest
sum(Banking_Cust_Acc$Average_Current_Balance)
sum(Banking_Cust_Acc$Intereset)
#Use sum() with Cleaned_Current_Balance and Cleaned_Interest
sum(Banking_Cust_Acc$Cleaned_Current_Balance)
sum(Banking_Cust_Acc$Cleaned_Interest)
which(is.na(Banking_Cust_Acc$Cleaned_Current_Balance))
which(is.na(Banking_Cust_Acc$Cleaned_Interest))
end_date <- lubridate::dmy("01/04/2024")
Banking_Cust_Acc$Deposit_Month_Length <- lubridate::interval(Banking_Cust_Acc$Acc_open_date, end_date) %/% months(1)
Cor_Data <- Banking_Cust_Acc %>% select(Age, Monthly_Salary, Cleaned_Current_Balance, Cleaned_Interest, Deposit_Month_Length) %>% cor() %>% round(3)
Cor_Data
corrplot::corrplot(Cor_Data, method = 'circle', addCoef.col = 'purple')
